name: R-CMD-check
on: 
  push:
    branches: [main, master, develop, release/*]
  pull_request:
    branches: [main, master, develop, release/*]

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_ASCII_CODE_: false
      _R_CHECK_ASCII_DATA_: false
      
    steps:
    - uses: actions/checkout@v4
    
    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: 'release'
        use-public-rspm: true
    
    - uses: r-lib/actions/setup-pandoc@v2
    
    - name: Query dependencies
      run: |
        install.packages('remotes')
        saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      shell: Rscript {0}

    - name: Cache R packages
      uses: actions/cache@v3
      with:
        path: ${{ env.R_LIBS_USER }}
        key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
        restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libxml2-dev libssl-dev
    
    - name: Install dependencies
      run: |
        remotes::install_deps(dependencies = TRUE)
        remotes::install_cran("rcmdcheck")
      shell: Rscript {0}
    
    - name: Check package
      uses: r-lib/actions/check-r-package@v2
      with:
        args: 'c("--no-manual", "--no-tests", "--ignore-vignettes")'
        error-on: '"error"'
        check-dir: '"check"'
    
    - name: Upload check results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: check-results
        path: check
