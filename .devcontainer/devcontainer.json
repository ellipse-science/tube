{
  "name": "tube",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".",
    "args": {
      "DOCKER_GID": "988"
    }
  },
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {}
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-azuretools.vscode-docker",
        "amazonwebservices.aws-toolkit-vscode",
        "bierner.markdown-preview-github-styles",
        "dbaeumer.vscode-eslint",
        "github.copilot",
        "github.copilot-chat",
        "github.vscode-github-actions",
        "github.vscode-pull-request-github",
        "janisdd.vscode-edit-csv",
        "mechatroner.rainbow-csv",
        "mohd-akram.vscode-html-format",
        "randomfractalsinc.vscode-data-preview",
        "rdebugger.r-debugger",
        "reditorsupport.r",
        "ms-azuretools.vscode-docker",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "vitest.explorer"
      ],
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "r.rterm.linux": "/home/vscode/.venv/bin/radian",
        "r.bracketedPaste": true,
        "r.sessionWatcher": true,
        "r.libPaths": [
          "/home/vscode/.venv/R/library"
        ],
        "r.lsp.path": "/home/vscode/.local/R/library/languageserver/R/languageserver",
        "editor.formatOnSave": false,
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": true
        }
      }
    }
  },
  "overrideCommand": false,
  "mounts": [
    "source=${localEnv:HOME}/.aws,target=/home/vscode/.aws,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.awsvault,target=/home/vscode/.awsvault,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.gitconfig,target=/home/vscode/.gitconfig,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.Renviron,target=/home/vscode/.Renviron,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.bash_history,target=/home/vscode/.bash_history,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.radian_history,target=/home/vscode/.radian_history,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.local/lib/R/site-library,target=/home/vscode/.local/lib/R/site-library,type=bind,consistency=cached",
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],
  "remoteEnv": {
    "RUN_MODE": "devcontainer",
    "AWS_SDK_LOAD_CONFIG": "1",
    "R_LIBS_USER": "/home/vscode/.local/lib/R/site-library",
    "AWS_VAULT_BACKEND": "file",
    "AWS_VAULT_FILE_DIR": "/home/vscode/.aws-vault"
  },
  "initializeCommand": "echo 'Checking Docker socket permissions...' && ls -la /var/run/docker.sock",
  "postCreateCommand": "/bin/bash -lc 'if [ -S /var/run/docker.sock ]; then sudo chown root:$(stat -c \"%g\" /var/run/docker.sock) /var/run/docker.sock && sudo chmod 664 /var/run/docker.sock && echo \"Docker permissions fixed\"; else echo \"Warning: Docker socket not found at /var/run/docker.sock\"; fi; cat > /home/vscode/.prompt_devcontainer.sh <<\"EOF\"\n# --- Colors ---\nc_reset=\"\\e[0m\"; c_bold=\"\\e[1m\"; c_cyan=\"\\e[36m\"; c_yellow=\"\\e[33m\"; c_purple=\"\\e[35m\"; c_green=\"\\e[32m\"; c_red=\"\\e[31m\"; c_blue=\"\\e[34m\"\nPROMPT_DIRTRIM=3\n\n# --- Segments ---\npy_seg() {\n  [ -n \"$VIRTUAL_ENV\" ] && echo -e \"🐍 ${c_yellow}$(basename \"$VIRTUAL_ENV\")${c_reset}\" && return\n  [ -n \"$CONDA_DEFAULT_ENV\" ] && echo -e \"🐍 ${c_yellow}$CONDA_DEFAULT_ENV${c_reset}\"\n}\n\ndocker_seg() {\n  ctx=$(docker context show 2>/dev/null)\n  [ -n \"$ctx\" ] && echo -e \"🐳 ${c_blue}$ctx${c_reset}\"\n}\n\naws_seg() {\n  prof=\"${AWS_VAULT:-$AWS_PROFILE}\"\n  [ -n \"$prof\" ] && echo -e \"☁️ ${c_cyan}$prof${c_reset}\"\n}\n\ngit_seg() {\n  branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null) || return\n  if ! git diff --quiet 2>/dev/null || ! git diff --cached --quiet 2>/dev/null; then\n    echo -e \"🌱 ${c_red}$branch*${c_reset}\"\n  else\n    echo -e \"🌱 ${c_green}$branch${c_reset}\"\n  fi\n}\n\nsegments_line() {\n  local parts=() s\n  for s in \"$(py_seg)\" \"$(docker_seg)\" \"$(aws_seg)\" \"$(git_seg)\"; do [ -n \"$s\" ] && parts+=(\"$s\"); done\n  echo \"${parts[*]}\"\n}\n\n# --- Prompt ---\nPS1=\"\\[${c_bold}${c_cyan}\\]\\\\u\\[${c_reset}\\]@\\[${c_yellow}\\]\\\\h\\[${c_reset}\\] \\[${c_purple}\\]\\\\w\\[${c_reset}\\]\\n\\$(segments_line)\\n\\\\$ \"\nEOF\n\n# Add loader to .bashrc once, for interactive shells only\nif ! grep -q \"# >>> devcontainer prompt >>>\" /home/vscode/.bashrc; then\n  {\n    echo \"# >>> devcontainer prompt >>>\"\n    echo \"case \\\"$-\\\" in *i*) [ -f /home/vscode/.prompt_devcontainer.sh ] && . /home/vscode/.prompt_devcontainer.sh ;; esac\"\n    echo \"# <<< devcontainer prompt <<<\"\n  } >> /home/vscode/.bashrc\nfi\n\nchown vscode:vscode /home/vscode/.prompt_devcontainer.sh\n'\n"
}
